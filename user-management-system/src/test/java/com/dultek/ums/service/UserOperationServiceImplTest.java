package com.dultek.ums.service;

import com.dultek.ums.model.*;
import com.dultek.ums.repo.EmployeeRepository;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;


@SpringBootTest
public class UserOperationServiceImplTest {

    @Autowired
    private EmployeeServiceImpl employeeService;

    @Autowired
    private EmployeeRepository employeeRepository;


    @Test
    public void testSaveEmployee() {
        // Arrange
        Employee employeeToSave = Employee.builder()
                .firstName("John")
                .lastName("Doe")
                .email("johndoe@email.com")
                .roles(
                        (Set<UserRole>) UserRole.builder().role(Role.EMPLOYEE).build()
                ).address(
                        Address.builder()
                                .city("Omaha")
                                .state("Nebraska")
                                .street("123 Main St")
                                .zipCode("68111")
                                .build()
                ).ssn("123-45-6790")
                .credentials(
                        UserCredentials.builder()
                                .username("doe1")
                                .password("password")
                                .build()
                )
                .build();


        // Act
        Employee savedEmployee = employeeService.saveEmployee(employeeToSave);

        // Assert
        assertNotNull(savedEmployee);
        assertNotNull(savedEmployee.getEmployeeId()); // Assuming id is generated by the database
        assertEquals("John", savedEmployee.getFirstName());
        assertEquals("Doe", savedEmployee.getLastName());

        // Clean up
        //employeeRepository.deleteById(savedEmployee.getEmployeeId());
    }

    @Test
    public void testGetEmployeeById() {
        // Arrange
        Employee employeeToSave = new Employee();
        employeeToSave.setFirstName("Jane");
        employeeToSave.setLastName("Doe");

        Employee savedEmployee = employeeRepository.save(employeeToSave);

        // Act
        Employee retrievedEmployee = employeeService.getEmployeeById(savedEmployee.getEmployeeId());

        // Assert
        assertNotNull(retrievedEmployee);
        assertEquals("Jane", retrievedEmployee.getFirstName());
        assertEquals("Doe", retrievedEmployee.getLastName());
    }

    // Similar tests for getAllEmployees, updateEmployee, deleteEmployeeById

}
